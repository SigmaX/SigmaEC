####################
# The experiment is the top-level controller for everything that happens.
####################
experiment = SigmaEC.experiment.SimpleExperiment
experiment.numRuns = 5
experiment.random = SigmaEC.SRandom
# Optionally fix the random seed
#experiment.random.seed = 10000

####################
# The CircleOfLife holds all the machinery needed for actual evolution.
####################
experiment.circleOfLife = SigmaEC.meta.island.IslandModelCircleOfLife
experiment.circleOfLife.topology = SigmaEC.meta.island.FullyConnectedTopology
experiment.circleOfLife.topology.numIslands = 5

####################
# Set up the initial population and representation parameters.
####################
experiment.circleOfLife.initializer = SigmaEC.represent.linear.BitStringInitializer
experiment.circleOfLife.initializer.populationSize = 20
experiment.circleOfLife.initializer.numBits = $(%experiment.circleOfLife.objective.numDimensions * %experiment.circleOfLife.evaluator.decoder.numBitsPerDimension)
experiment.circleOfLife.initializer.random = %experiment.random

experiment.circleOfLife.evaluator = SigmaEC.evaluate.EvaluationOperator
experiment.circleOfLife.evaluator.objective = %experiment.circleOfLife.objective
experiment.circleOfLife.evaluator.decoder = SigmaEC.represent.linear.BitStringToDoubleVectorDecoder
experiment.circleOfLife.evaluator.decoder.numBitsPerDimension = 32
experiment.circleOfLife.evaluator.decoder.min = -10.0
experiment.circleOfLife.evaluator.decoder.max = 10.0
experiment.circleOfLife.evaluator.decoder.numDimensions = %experiment.circleOfLife.objective.numDimensions
experiment.circleOfLife.evaluator.decoder.grayCode = false

experiment.circleOfLife.random = %experiment.random
experiment.circleOfLife.fitnessComparator = SigmaEC.select.FitnessComparator
experiment.circleOfLife.fitnessComparator.minimize = true
experiment.circleOfLife.fitnessComparator.equalIsBetter = true
#experiment.circleOfLife.stoppingCondition = SigmaEC.NumStepsStoppingCondition
#experiment.circleOfLife.stoppingCondition.numSteps = 100
experiment.circleOfLife.stoppingCondition = SigmaEC.meta.NumStepsWithoutGlobalImprovementStoppingCondition
experiment.circleOfLife.stoppingCondition.numStepsWithoutImprovement = 50
experiment.circleOfLife.stoppingCondition.fitnessComparator = %experiment.circleOfLife.fitnessComparator

####################
# The objective function and genotype-to-phenotype mapping
####################
experiment.circleOfLife.objective = SigmaEC.evaluate.objective.real.SphereObjective
experiment.circleOfLife.objective.numDimensions = 5

####################
# Operator pipeline
####################
# List reproductive operator types here, in the order they will be applied.
# An evaluation operator should come last, so that the children have their fitnesses assigned.
experiment.circleOfLife.operators =     SigmaEC.select.SelectionOperator,\
                                        SigmaEC.operate.MatingOperator,\
                                        SigmaEC.operate.MutatingOperator,\
                                        %experiment.circleOfLife.evaluator
# Parameters for individual elements of a list can be accessed by their index.
experiment.circleOfLife.operators.0.selector = SigmaEC.select.TournamentSelector
experiment.circleOfLife.operators.0.selector.tournamentSize = 2
experiment.circleOfLife.operators.0.selector.fitnessComparator = %experiment.circleOfLife.fitnessComparator
experiment.circleOfLife.operators.0.selector.random = %experiment.random
experiment.circleOfLife.operators.1.mator = SigmaEC.operate.NPointCrossoverMator
experiment.circleOfLife.operators.1.mator.numCutPoints = 2
experiment.circleOfLife.operators.1.mator.random = %experiment.random
experiment.circleOfLife.operators.2.mutator = SigmaEC.operate.BitGeneMutator
experiment.circleOfLife.operators.2.mutator.mutationRate = $(1/%experiment.circleOfLife.initializer.numBits)
experiment.circleOfLife.operators.2.mutator.random = %experiment.random

####################
# Measurements 
####################
experiment.circleOfLife.metrics = SigmaEC.measure.WriterPopulationMetric, SigmaEC.measure.WriterPopulationMetric
experiment.circleOfLife.metrics.0.metric = SigmaEC.measure.FitnessStatisticsPopulationMetric
experiment.circleOfLife.metrics.0.metric.fitnessComparator = %experiment.circleOfLife.fitnessComparator
experiment.circleOfLife.metrics.1.file = results/phenotypes.csv
experiment.circleOfLife.metrics.1.metric = SigmaEC.measure.BitStringIndividualPopulationMetric
experiment.circleOfLife.metrics.1.metric.decoder = %experiment.circleOfLife.evaluator.decoder
experiment.circleOfLife.metrics.1.metric.bestOnly = true
experiment.circleOfLife.metrics.1.metric.fitnessComparator = %experiment.circleOfLife.fitnessComparator

