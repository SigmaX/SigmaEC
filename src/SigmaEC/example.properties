# The experiment is the top-level controller for everything that happens.
experiment = SigmaEC.experiment.SimpleExperiment
# Optionally fix the random seed
#experiment.seed = 10000
experiment.numRuns = 1

# Set up the initial population and representation parameters.
experiment.initializer = SigmaEC.represent.BitStringInitializer
experiment.initializer.populationSize = 50
experiment.initializer.numBits = 10

# The CircleOfLife holds all the machinery needed for actual evolution.
experiment.circleOfLife = SigmaEC.SimpleCircleOfLife
experiment.circleOfLife.numGenerations = 100

# The genotype-to-phenotype mapping and objective function
experiment.circleOfLife.objective = SigmaEC.evaluate.objective.RosenbrockObjective
experiment.circleOfLife.objective.numDimensions = 3
experiment.circleOfLife.decoder = SigmaEC.represent.BitStringToDoubleVectorDecoder
experiment.circleOfLife.decoder.numBitsPerDimension = 4
experiment.circleOfLife.decoder.highestSignificance = 0
# Prefixing the name of another parameters with '%' retrieves its value
experiment.circleOfLife.decoder.numDimensions = %experiment.circleOfLife.objective.numDimensions

# Parent selection gets applied before reproductive operators
experiment.circleOfLife.parentSelector = SigmaEC.select.TournamentSelector
experiment.circleOfLife.parentSelector.tournamentSize = 2

# "Pre" metrics are measurements taken in between parent selection and reproduction.
experiment.circleOfLife.preMetrics =

# List reproductive operator types here, in the order they will be applied.
experiment.circleOfLife.generators = SigmaEC.operate.MatingGenerator,SigmaEC.operate.MutatingGenerator
# Parameters for individual elements of a list can be accessed by their index.
experiment.circleOfLife.generators.0.mator = SigmaEC.operate.NPointCrossoverMator
experiment.circleOfLife.generators.0.mator.numCutPoints = 2
experiment.circleOfLife.generators.1.mutator = SigmaEC.operate.BitGeneMutator
experiment.circleOfLife.generators.1.mutationRate = 0.05

# "Post" metrics are measurements taken in between reproduction and survival selection.
experiment.circleOfLife.postMetrics =

# Survival selection gets applied after reproductive operators.  Typically you want parent selection or survival selection, but not both.
# experiment.circleOfLife.survivalSelector = SigmaEC.select.TournamentSelector


