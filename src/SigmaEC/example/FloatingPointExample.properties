####################
# The experiment is the top-level controller for everything that happens.
####################
experiment = SigmaEC.experiment.SimpleExperiment
experiment.numRuns = 2
experiment.random = SigmaEC.SRandom
# Optionally fix the random seed
#experiment.random.seed = 10000

####################
# The CircleOfLife holds all the machinery needed for actual evolution.
####################
experiment.circleOfLife = SigmaEC.meta.SimpleCircleOfLife
#experiment.circleOfLife = SigmaEC.RandomCircleOfLife

####################
# Set up the initial population and representation parameters.
####################
experiment.circleOfLife.initializer = SigmaEC.represent.linear.DoubleVectorInitializer
experiment.circleOfLife.initializer.populationSize = 20
experiment.circleOfLife.initializer.defaultMaxValue = 10.0
experiment.circleOfLife.initializer.defaultMinValue = -10.0
# Prefixing the name of another parameters with '%' retrieves its value
experiment.circleOfLife.initializer.numDimensions = %experiment.circleOfLife.objective.numDimensions
experiment.circleOfLife.initializer.random = %experiment.random
experiment.circleOfLife.evaluator = SigmaEC.evaluate.EvaluationOperator
experiment.circleOfLife.evaluator.objective = %experiment.circleOfLife.objective
experiment.circleOfLife.evaluator.decoder = %experiment.circleOfLife.decoder

experiment.circleOfLife.random = %experiment.random
experiment.circleOfLife.stoppingCondition = SigmaEC.meta.NumStepsStoppingCondition
experiment.circleOfLife.stoppingCondition.numSteps = 300
experiment.circleOfLife.fitnessComparator = SigmaEC.select.ScalarFitnessComparator
experiment.circleOfLife.fitnessComparator.minimize = true

####################
# The objective function and genotype-to-phenotype mapping
####################
experiment.circleOfLife.objective = SigmaEC.evaluate.objective.real.SphereObjective
experiment.circleOfLife.objective.numDimensions = 5
experiment.circleOfLife.objective.width = $(2*(%experiment.circleOfLife.decoder.max - %experiment.circleOfLife.decoder.min))

experiment.circleOfLife.decoder = SigmaEC.represent.CloneDecoder
experiment.circleOfLife.decoder.numDimensions = %experiment.circleOfLife.objective.numDimensions

####################
# Reproductive operators
####################
# List reproductive operator types here, in the order they will be applied.
experiment.circleOfLife.operators = SigmaEC.select.SelectionOperator,\
                                    SigmaEC.operate.MutatingOperator,\
                                    %experiment.circleOfLife.evaluator
# Parameters for individual elements of a list can be accessed by their index.
experiment.circleOfLife.operators.0.selector = SigmaEC.select.TournamentSelector
experiment.circleOfLife.operators.0.selector.tournamentSize = 2
experiment.circleOfLife.operators.0.selector.fitnessComparator = %experiment.circleOfLife.fitnessComparator
experiment.circleOfLife.operators.0.selector.random = %experiment.random
experiment.circleOfLife.operators.1.mutator = SigmaEC.operate.DoubleGeneMutator
experiment.circleOfLife.operators.1.mutator.distribution = SigmaEC.util.math.dist.GaussianDistribution
experiment.circleOfLife.operators.1.mutator.distribution.std = 0.5
experiment.circleOfLife.operators.1.mutator.distribution.random = %experiment.random
experiment.circleOfLife.operators.1.mutator.random = %experiment.random
experiment.circleOfLife.operators.1.mutator.mutationRate = SigmaEC.operate.ConstantMutationRate
experiment.circleOfLife.operators.1.mutator.mutationRate.rate = $(1/%experiment.circleOfLife.objective.numDimensions)

####################
# "Post" metrics are measurements taken in between reproduction and survival selection.
####################
experiment.circleOfLife.metrics = SigmaEC.measure.WriterPopulationMetric, SigmaEC.measure.WriterPopulationMetric
experiment.circleOfLife.metrics.0.metric = SigmaEC.measure.FitnessStatisticsPopulationMetric
experiment.circleOfLife.metrics.0.metric.fitnessComparator = %experiment.circleOfLife.fitnessComparator
experiment.circleOfLife.metrics.1.file = results/phenotypes.csv
experiment.circleOfLife.metrics.1.metric = SigmaEC.measure.DoubleVectorPopulationMetric
experiment.circleOfLife.metrics.1.metric.numDimensions = %experiment.circleOfLife.objective.numDimensions
experiment.circleOfLife.metrics.1.metric.bestOnly = false

