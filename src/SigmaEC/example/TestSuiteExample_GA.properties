####################
# The experiment is the top-level controller for everything that happens.
####################
experiment = SigmaEC.experiment.SimpleExperiment
experiment.numRuns = 1
experiment.random = %meta.random

####################
# The CircleOfLife holds all the machinery needed for actual evolution.
####################
experiment.circleOfLife = SigmaEC.meta.SimpleCircleOfLife

####################
# Set up the initial population and representation parameters.
####################
experiment.circleOfLife.initializer = SigmaEC.represent.linear.BitStringInitializer
experiment.circleOfLife.initializer.populationSize = 20
# Prefixing the name of another parameters with '%' retrieves its value
# Values that start with '$' are arithmetic expressions
experiment.circleOfLife.initializer.numBits = $(%meta.numDimensions * %experiment.circleOfLife.evaluator.decoder.numBitsPerDimension)
# When '%' is used to on a class parameter, the same instance is reused.
experiment.circleOfLife.initializer.random = %experiment.random
experiment.circleOfLife.evaluator = SigmaEC.evaluate.EvaluationOperator
experiment.circleOfLife.evaluator.objective = %experiment.circleOfLife.objective
experiment.circleOfLife.evaluator.decoder = SigmaEC.represent.linear.BitStringToDoubleVectorDecoder
experiment.circleOfLife.evaluator.decoder.numBitsPerDimension = 32
experiment.circleOfLife.evaluator.decoder.min = -10.0
experiment.circleOfLife.evaluator.decoder.max = 10.0
experiment.circleOfLife.evaluator.decoder.numDimensions = %meta.numDimensions
experiment.circleOfLife.evaluator.decoder.grayCode = false

experiment.circleOfLife.random = %experiment.random
experiment.circleOfLife.fitnessComparator = SigmaEC.select.FitnessComparator
experiment.circleOfLife.fitnessComparator.minimize = true
experiment.circleOfLife.fitnessComparator.equalIsBetter = true
#experiment.circleOfLife.stoppingCondition = SigmaEC.NumStepsStoppingCondition
#experiment.circleOfLife.stoppingCondition.numSteps = 100
experiment.circleOfLife.stoppingCondition = SigmaEC.meta.NumStepsWithoutGlobalImprovementStoppingCondition
experiment.circleOfLife.stoppingCondition.numStepsWithoutImprovement = 10
experiment.circleOfLife.stoppingCondition.fitnessComparator = %experiment.circleOfLife.fitnessComparator

####################
# The objective function and genotype-to-phenotype mapping
####################
experiment.circleOfLife.objective = %meta.objective
experiment.circleOfLife.objective.numDimensions = 5

####################
# Operator pipeline
####################
# List reproductive operator types here, in the order they will be applied.
# An evaluation operator should come last, so that the children have their fitnesses assigned.
experiment.circleOfLife.operators =     SigmaEC.select.SelectionOperator,\
                                        SigmaEC.operate.MatingOperator,\
                                        SigmaEC.operate.PerGeneMutatingOperator,\
                                        %experiment.circleOfLife.evaluator
# Parameters for individual elements of a list can be accessed by their index.
experiment.circleOfLife.operators.0.selector = SigmaEC.select.TournamentSelector
experiment.circleOfLife.operators.0.selector.tournamentSize = 2
experiment.circleOfLife.operators.0.selector.fitnessComparator = %experiment.circleOfLife.fitnessComparator
experiment.circleOfLife.operators.0.selector.random = %experiment.random
experiment.circleOfLife.operators.1.mator = SigmaEC.operate.NPointCrossoverMator
experiment.circleOfLife.operators.1.mator.numCutPoints = 2
experiment.circleOfLife.operators.1.mator.random = %experiment.random
experiment.circleOfLife.operators.2.mutator = SigmaEC.operate.BitGeneMutator
experiment.circleOfLife.operators.2.mutator.mutationRate = $(1/%experiment.circleOfLife.initializer.numBits)
experiment.circleOfLife.operators.2.mutator.random = %experiment.random

####################
# Measurements 
####################
experiment.circleOfLife.metrics = SigmaEC.measure.WriterPopulationMetric, SigmaEC.measure.WriterPopulationMetric
experiment.circleOfLife.metrics.0.metric = SigmaEC.measure.FitnessStatisticsPopulationMetric
experiment.circleOfLife.metrics.0.metric.fitnessComparator = %experiment.circleOfLife.fitnessComparator
experiment.circleOfLife.metrics.1.prefix = %meta.prefix
experiment.circleOfLife.metrics.1.file = phenotypes.csv
experiment.circleOfLife.metrics.1.metric = SigmaEC.measure.BitStringIndividualPopulationMetric
experiment.circleOfLife.metrics.1.metric.numBits = %experiment.circleOfLife.initializer.numBits
experiment.circleOfLife.metrics.1.metric.bestOnly = true
experiment.circleOfLife.metrics.1.metric.fitnessComparator = %experiment.circleOfLife.fitnessComparator

