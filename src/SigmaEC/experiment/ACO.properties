experiment =    SigmaEC.experiment.SimpleExperiment
experiment.numRuns = 1

experiment.circleOfLife =   SigmaEC.ACOCircleOfLife
experiment.circleOfLife.random = %meta.random

experiment.circleOfLife.numNodes = %meta.numDimensions
experiment.circleOfLife.numAnts = 100

experiment.circleOfLife.stoppingCondition = SigmaEC.NumStepsStoppingCondition
experiment.circleOfLife.stoppingCondition.numSteps = 500

experiment.circleOfLife.evaluator = SigmaEC.evaluate.EvaluationGenerator
experiment.circleOfLife.evaluator.decoder = SigmaEC.represent.CloneDecoder
experiment.circleOfLife.evaluator.objective = %meta.objective

experiment.circleOfLife.fitnessComparator = SigmaEC.select.FitnessComparator
experiment.circleOfLife.fitnessComparator.equalIsBetter = true
experiment.circleOfLife.fitnessComparator.minimize = true

experiment.circleOfLife.metrics = SigmaEC.measure.WriterPopulationMetric
experiment.circleOfLife.metrics.0.prefix = %meta.prefix
experiment.circleOfLife.metrics.0.file = aco_fitnesses.csv
experiment.circleOfLife.metrics.0.metric = SigmaEC.measure.FitnessStatisticsPopulationMetric
experiment.circleOfLife.metrics.0.metric.fitnessComparator = %experiment.circleOfLife.fitnessComparator
